name: CI

on:
  pull_request:
    branches:
    - master
    types: [opened, reopened, synchronize]

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  UnityTest:
    name: Test on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2020.2.1f1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Cache
        uses: actions/cache@v2
        with:
          path: /Library
          key: Library
          restore-keys: |
            Library
      - uses: game-ci/unity-test-runner@v2.0-alpha-2
        id: tests
        with:
          unityVersion: ${{ matrix.unityVersion }}
      - uses: actions/upload-artifact@v1
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}
  DocTest:
    name: Docs build test
    runs-on: ubuntu-18.04
    defaults:
      run:
        working-directory: ./cbsl
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Enviornment Setup
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Build Docs
        run: yarn build