(self.webpackChunkcbsl=self.webpackChunkcbsl||[]).push([[646],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(r),m=i,v=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(v,a(a({ref:t},c),{},{components:r})):n.createElement(v,a({ref:t},c))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8215:function(e,t,r){"use strict";var n=r(7294);t.Z=function(e){var t=e.children,r=e.hidden,i=e.className;return n.createElement("div",{role:"tabpanel",hidden:r,className:i},t)}},1395:function(e,t,r){"use strict";r.d(t,{Z:function(){return c}});var n=r(7294),i=r(944),o=r(6010),a="tabItem_1uMI",l="tabItemActive_2DSg";var s=37,u=39;var c=function(e){var t=e.lazy,r=e.block,c=e.defaultValue,d=e.values,p=e.groupId,m=e.className,v=(0,i.Z)(),h=v.tabGroupChoices,f=v.setTabGroupChoices,g=(0,n.useState)(c),k=g[0],b=g[1],y=n.Children.toArray(e.children),C=[];if(null!=p){var P=h[p];null!=P&&P!==k&&d.some((function(e){return e.value===P}))&&b(P)}var w=function(e){var t=e.currentTarget,r=C.indexOf(t),n=d[r].value;b(n),null!=p&&(f(p,n),setTimeout((function(){var e,r,n,i,o,a,s,u;(e=t.getBoundingClientRect(),r=e.top,n=e.left,i=e.bottom,o=e.right,a=window,s=a.innerHeight,u=a.innerWidth,r>=0&&o<=u&&i<=s&&n>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l),setTimeout((function(){return t.classList.remove(l)}),2e3))}),150))},N=function(e){var t,r;switch(e.keyCode){case u:var n=C.indexOf(e.target)+1;r=C[n]||C[0];break;case s:var i=C.indexOf(e.target)-1;r=C[i]||C[C.length-1]}null==(t=r)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":r},m)},d.map((function(e){var t=e.value,r=e.label;return n.createElement("li",{role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,className:(0,o.Z)("tabs__item",a,{"tabs__item--active":k===t}),key:t,ref:function(e){return C.push(e)},onKeyDown:N,onFocus:w,onClick:w},r)}))),t?(0,n.cloneElement)(y.filter((function(e){return e.props.value===k}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},y.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==k})}))))}},9443:function(e,t,r){"use strict";var n=(0,r(7294).createContext)(void 0);t.Z=n},944:function(e,t,r){"use strict";var n=r(7294),i=r(9443);t.Z=function(){var e=(0,n.useContext)(i.Z);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},653:function(e,t,r){"use strict";r.d(t,{Z:function(){return a}});var n=r(7294),i="container_2urz",o="frame_1vuu",a=function(e){return n.createElement("div",{className:i},n.createElement("iframe",{width:"100%",height:"100%",frameBorder:"0",allowFullScreen:!0,src:e.src,className:o,allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"}))}},6187:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return u},metadata:function(){return c},toc:function(){return d},default:function(){return m}});var n=r(2122),i=r(9756),o=(r(7294),r(3905)),a=r(1395),l=r(8215),s=r(653),u={title:"Provider"},c={unversionedId:"modules/core/provider",id:"modules/core/provider",isDocsHomePage:!1,title:"Provider",description:"<Tabs",source:"@site/docs/modules/core/provider.md",sourceDirName:"modules/core",slug:"/modules/core/provider",permalink:"/modules/core/provider",editUrl:"https://github.com/BLaZeKiLL/CBSL/edit/master/Docs/docs/modules/core/provider.md",version:"current",frontMatter:{title:"Provider"},sidebar:"docs",previous:{title:"Object Pool",permalink:"/modules/core/collections/object_pool"},next:{title:"CBSL - Logging",permalink:"/modules/logging/introduction"}},d=[{value:"Implementation",id:"implementation",children:[]},{value:"Initialization",id:"initialization",children:[]},{value:"Usage",id:"usage",children:[]}],p={toc:d};function m(e){var t=e.components,r=(0,i.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(a.Z,{defaultValue:"overview",values:[{label:"Overview",value:"overview"},{label:"API",value:"api"},{label:"Example",value:"example"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"overview",mdxType:"TabItem"},(0,o.kt)("p",null,"Provider base class allows you to create simple IOC containers. Ideally your provider should have\nvirtuals methods which return interface types that can be overriding in concrete providers (runtime provider & testing provider). Main goal of this pattern is to decouple dependencies and easy testing."),(0,o.kt)("h2",{id:"implementation"},"Implementation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Simple provider implementation"',title:'"Simple',provider:!0,'implementation"':!0},"public class SimpleProvider : Provider<SimpleProvider> {\n\n    public SimpleSettings Settings { get; set; }\n    \n    public virtual ISimpleComponent CreateComponent() => new SimpleComponent(Settings.Health);\n\n}\n")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Singletons")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Can be created by storing the objects in member variables"))),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"initialization"},"Initialization"),(0,o.kt)("p",null,"Providers need to be initialized once before use and this can be done by calling the initialize method."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Provider Initialization"',title:'"Provider','Initialization"':!0},"Provider<SimpleProvider>.Initialize(new TestSimpleProvider(), provider => {\n    provider.Settings = _settings;\n});\n")),(0,o.kt)("p",null,"Initialize has 2 overloads :-"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Initialize(provider, initializer)")," :-",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"provider - it's the concrete instance of your provider, usefull when you are overiding your provider\nand want to use differnt provider depending upon config"),(0,o.kt)("li",{parentName:"ul"},"initializer - it's a callback that is called just after the provider is initialized, you can set      singleton member variables here for eager initialization"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Initialize(initializer)")," - same as above just that provider is created according to the generic type,\ncan't use different implementation's of provider in this case")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Objects can be requested in the following manner."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Provider usage"',title:'"Provider','usage"':!0},"var component = Provider<TestProvider>.Current.CreateComponent();\n"))),(0,o.kt)(l.Z,{value:"api",mdxType:"TabItem"},"working on a tool to auto-generate api docs."),(0,o.kt)(l.Z,{value:"example",mdxType:"TabItem"},(0,o.kt)("p",null,"Provider pattern used in a voxel engine"),(0,o.kt)(s.Z,{src:"https://www.youtube.com/embed/I5pKr6fnne0",mdxType:"Video"}),(0,o.kt)("h4",{id:"below-example-shows-how-a-provider-is-being-used-in-a-voxel-terrain-generation-system"},"Below example shows how a provider is being used in a voxel terrain generation system."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Voxel Provider"',title:'"Voxel','Provider"':!0},"public class VoxelProvider<B> : Provider<VoxelProvider<B>> where B : IBlock {\n\n    public VoxelSettings Settings { get; set; }\n\n    public virtual Chunk<B> CreateChunk(Vector3Int position) => new Chunk<B>(position);\n\n    public virtual ChunkStore<B> ChunkStore(INoiseProfile<B> noiseProfile) => new ChunkStore<B>(noiseProfile, Settings.Chunk);\n\n    public virtual IChunkData<B> ChunkData(B[] blocks) => null;\n    \n    public virtual INoiseProfile<B> NoiseProfile() => null;\n\n    public virtual ChunkBehaviourPool<B> ChunkPool(Transform transform) => new ChunkBehaviourPool<B>(transform);\n\n    public virtual IMeshBuilder<B> MeshBuilder() => new GreedyMeshBuilder<B>(Settings.Chunk.ChunkSize);\n    \n    public virtual MeshBuildCoordinator<B> MeshBuildCoordinator(ChunkBehaviourPool<B> chunkBehaviourPool) => new UniTaskMultiThreadedMeshBuildCoordinator<B>(chunkBehaviourPool, Settings.Schedular.BatchSize);\n\n}\n")),(0,o.kt)("hr",null),(0,o.kt)("h4",{id:"this-base-class-is-extended-by-2-classes--"},"This base class is extended by 2 classes :-"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"ColoredVoxelProvider")," - used at runtime for colored voxel terrain generation system"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"public class ColoredVoxelProvider : VoxelProvider<ColoredBlock> {\n    \n    public override IMeshBuilder<ColoredBlock> MeshBuilder() => new ColoredGreedyMeshBuilder(Settings.Chunk.ChunkSize);\n\n    public override INoiseProfile<ColoredBlock> NoiseProfile() => new ColoredNoiseProfile2D(Settings.NoiseSettings as NoiseSettings2D, Settings.Chunk);\n\n    public override IChunkData<ColoredBlock> ChunkData(ColoredBlock[] blocks) {\n        var data = new ColoredChunkData(blocks, 4, Settings.Chunk.ChunkSize);\n        data.Compress();\n\n        return data;\n    }\n\n    public override MeshBuildCoordinator<ColoredBlock> MeshBuildCoordinator(ChunkBehaviourPool<ColoredBlock> chunkBehaviourPool) => new ColoredMeshBuildCoordinator(chunkBehaviourPool, Settings.Schedular.BatchSize);\n\n}\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"TestVoxelProvider")," - used for testing of the voxel terrain generation system"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"public class TestVoxelProvider : VoxelProvider<TestBlock> {\n\n    public override INoiseProfile<TestBlock> NoiseProfile() => new TestNoiseProfile2D(Settings.NoiseSettings as NoiseSettings2D, Settings.Chunk);\n\n}\n")))),(0,o.kt)("hr",null),(0,o.kt)("h4",{id:"finally-the-provider-is-initialized-in-the-system"},"Finally the provider is initialized in the system."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"protected virtual VoxelProvider<B> Provider() => new VoxelProvider<B>();\n\nprivate void Awake() {\n    VoxelProvider<B>.Initialize(Provider(), provider => {\n        provider.Settings = _settings;\n    });\n}\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Provider()")," method is overwritten depending upon config and the correct provider is initialized."))))}m.isMDXComponent=!0},6010:function(e,t,r){"use strict";function n(e){var t,r,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(r=n(e[t]))&&(i&&(i+=" "),i+=r);else for(t in e)e[t]&&(i&&(i+=" "),i+=t);return i}function i(){for(var e,t,r=0,i="";r<arguments.length;)(e=arguments[r++])&&(t=n(e))&&(i&&(i+=" "),i+=t);return i}r.d(t,{Z:function(){return i}})}}]);